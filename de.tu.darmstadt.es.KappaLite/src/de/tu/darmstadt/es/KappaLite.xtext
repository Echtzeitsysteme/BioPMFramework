grammar de.tu.darmstadt.es.KappaLite with org.eclipse.xtext.common.Terminals
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
generate kappaLite "http://www.tu.de/darmstadt/es/KappaLite"

KLIFile:elements += KLIFileElement*;

KLIFileElement: KLIInit | KLINamedFileElement;

KLINamedFileElement:KLIAgent | KLIRule | KLIVariable | KLIGeoLocation;

KLIGeoLocation:KLILocation | KLICompartment;

KLIInit:'%init:' number = KLICallExpression agentConfig = KLIDescriptionContainer;

KLIAgent:'%agent:' name = ID container = KLISiteContainer;

KLICompartment:'%compartment:' name = ID shape=SHAPE;

KLILocation:'%location:' name = ID locationDecription=KLILocationDecription;

KLILocationDecription:x=KLICoordinate y=KLICoordinate z=KLICoordinate;

KLICoordinate:'[' position = KLILiteralExpression ']';

KLISiteContainer:'(' sites += KLISite (',' sites+=KLISite)* ')';

KLISite:name = ID container+=KLIState*;

KLIState: '~' name = ID;

KLIRule: "'"name = ID "'" (lhs = KLIDescriptionContainer)? ((biDirectional ?= '<->' (rhs = KLIDescriptionContainer)? (('@' lrating=KLICallExpression) (',' rrating=KLICallExpression)?|  ('@' ',' rrating=KLICallExpression))?) | ('->' (rhs = KLIDescriptionContainer)? ('@' rrating=KLICallExpression)?));

KLIDescriptionContainer:agents += KLIAgentDescription (',' agents += KLIAgentDescription)*;

KLIAgentDescription:agent = [KLIAgent] (':' position = [KLICompartment])? '(' (sites += KLISiteDescription)? (',' sites += KLISiteDescription)* ')';

KLISiteDescription:site = [KLISite] (':' position = [KLILocation])? ('~' internalStates += KLIStateDescription)* (connection=KLIConnection)?;

KLIStateDescription:state = [KLIState];

KLIConnection:'!' connectionNumber = INT;

KLIVariable:'%var:' "'"name = ID"'" expr = KLIExpression;

KLIExpression: KLICallExpression | KLIMathExpression | KLIAgentDescriptionExpression;

KLICallExpression:KLILiteralExpression | KLIVariableExpression;

KLIMathExpression:lExpr = KLICallExpression operator=MATH_OPERATOR rExpr = KLIExpression;

KLILiteralExpression:KLIIntegerLiteralExpression | KLIDecimalLiteralExpression;

KLIIntegerLiteralExpression: value = INT;

KLIDecimalLiteralExpression: value = DECIMAL;

KLIVariableExpression: "'" value = [KLIVariable] "'";

KLIAgentDescriptionExpression:value = KLIDescriptionContainer;

MATH_OPERATOR: '*' | '+' | '-' | '/';
DECIMAL returns ecore::EDouble:INT'.'INT ;
terminal SHAPE:'ellipse' | 'sphere' | 'cylinder';

//terminals

@Override 
terminal STRING: '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* '"';
@Override 
terminal SL_COMMENT 	: '#' !('\n'|'\r')* ('\r'? '\n')?;

//model helpers


